!function(e){function t(n){if(r[n])return r[n].exports;var a=r[n]={exports:{},id:n,loaded:!1};return e[n].call(a.exports,a,a.exports,t),a.loaded=!0,a.exports}var r={};return t.m=e,t.c=r,t.p="",t(0)}({0:function(e,t,r){"use strict";function n(e){return e&&e.__esModule?e:{"default":e}}var a=r(1),o=n(a),i=r(12),s=n(i);o["default"].render(o["default"].createElement(s["default"],null),document.getElementById("react-body"))},1:function(e,t){e.exports=React},12:function(e,t){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function n(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}(),o=function(e,t,r){for(var n=!0;n;){var a=e,o=t,i=r;s=l=u=void 0,n=!1,null===a&&(a=Function.prototype);var s=Object.getOwnPropertyDescriptor(a,o);if(void 0!==s){if("value"in s)return s.value;var u=s.get;return void 0===u?void 0:u.call(i)}var l=Object.getPrototypeOf(a);if(null===l)return void 0;e=l,t=o,r=i,n=!0}},i=function(e){function t(){r(this,t),o(Object.getPrototypeOf(t.prototype),"constructor",this).apply(this,arguments)}return n(t,e),a(t,[{key:"render",value:function(){return React.createElement("div",null,React.createElement("p",null,"This is a post mostly generated using react and ES6."),React.createElement("p",null,"Webpack builds the source automatically on file changes and then jekyll serves it. I start these processes using: ",React.createElement("code",null,'foreman start --formation="webpack_watch=1,webpack_server=1,jekyll=1"'),". For convenience, I bound this to ",React.createElement("code",null,"npm start")," in the ",React.createElement("code",null,"package.json"),"."),React.createElement("p",null,"To speed up testing while updating react classes, I set up react-hot-reload."),React.createElement("p",null,"This allows real-time updates to the react classes, without a reload!"),React.createElement("p",null,"Things I had to do to get this work:"),React.createElement("ul",null,React.createElement("li",null,"Added ",React.createElement("code",null,"react-hot")," to the js loaders:"),React.createElement("li",null,"Change ",React.createElement("code",null,"output.publicPath")," to my webpack-dev-server host and port:"),React.createElement("li",null,"Add plugins: ",React.createElement("code",null,"webpack.HotModuleReplacementPlugin")," and ",React.createElement("code",null,"webpack.NoErrorsPlugin")),React.createElement("li",null,"Set up webpack config ",React.createElement("code",null,"devServer")," for serving, particularly adding headers for ",React.createElement("code",null,"'Access-Control-Allow-Origin': '*'")),React.createElement("li",null,"Remove react from webpack externals and load it as a node module"),React.createElement("li",null,"Add flag to javascript include to switch between serving from ",React.createElement("code",null,"webpack-dev-server")," during development to the final build location"),React.createElement("li",null,"Serve the javascript files from the webpack-dev-server ",React.createElement("code",null,"publicPath")),React.createElement("li",null,"Then run ",React.createElement("code",null,"webpack-dev-server --config webpack.hot.config.js"))))}}]),t}(React.Component);t["default"]=i,e.exports=t["default"]}});
//# sourceMappingURL=react-in-jekyll.min.js.map